name: Create Release

on:
  # Only create a release if the Dockerfile has changed.
  push:
    branches: [main]
    paths:
      - 'renovate_image/Dockerfile'
  workflow_dispatch:
    inputs:
      version_increment:
        description: "Specifies how the release version will be incremented from the current version."
        type: choice
        required: true
        default: minor
        options:
          - major
          - minor
          - patch

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  VERSION_INCREMENT: ${{ inputs.version_increment || 'patch' }}

jobs:
  create_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      release_tag: ${{ steps.version.outputs.v-version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4
      - name: Get next version
        uses: reecetech/version-increment@2023.9.3
        id: version
        with:
          scheme: semver
          increment: ${{ env.VERSION_INCREMENT }}
      - name: Create Release
        uses: softprops/action-gh-release@v2.0.2
        id: release
        with:
          name: Release ${{ steps.version.outputs.version }}
          tag_name: ${{ steps.version.outputs.v-version }}
          generate_release_notes: true

  build_and_push_image:
    needs: [create_release]
    if: success()
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4
      - name: Log in to the Container registry
        uses: docker/login-action@495b903b085143f8b4b9b56db8f9ef8c2c944693
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@b67fef219a3c5542bf1d0948862a08152653b4d4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09
        with:
          context: ./renovate_image
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.create_release.outputs.release_tag }}
          labels: ${{ steps.meta.outputs.labels }}
